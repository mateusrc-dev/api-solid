generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}
// enum is a list that we can choose from the options

model User {
  // plural name starting with a capital letter
  id            String    @id @default(uuid()) // config of field - 'id' is mandatory in each table - let's use 'uuid' because it's safer since it will be visible in the url
  name          String
  email         String    @unique
  password_hash String
  role          Role      @default(MEMBER)
  created_at    DateTime  @default(now())
  CheckIns      CheckIn[] // 'CheckIns' is name of relation - dont's is a field in table - relation 1-N

  @@map("users") // here is a config of model
}

model CheckIn {
  id           String    @id @default(uuid())
  created_at   DateTime  @default(now())
  validated_at DateTime?
  user         User      @relation(fields: [user_id], references: [id]) // 'user' is name of relation - dont's is a field in table
  user_id      String
  gym          Gym       @relation(fields: [gym_id], references: [id])
  gym_id       String

  @@map("check_ins")
}

model Gym {
  id          String    @id @default(uuid())
  title       String
  description String?
  phone       String?
  latitude    Decimal
  longitude   Decimal
  CheckIns    CheckIn[] // 'CheckIns' is name of relation - dont's is a field in table - relation 1-N

  @@map("gyms")
}
